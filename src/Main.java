//TIP To <b>Run</b> code, press <shortcut actionId="Run"/> or
// click the <icon src="AllIcons.Actions.Execute"/> icon in the gutter.
/*public class Main {
    public static void main(String[] args) {
        //TIP Press <shortcut actionId="ShowIntentionActions"/> with your caret at the highlighted text
        // to see how IntelliJ IDEA suggests fixing it.
        System.out.printf("Hello and welcome!");
    }
}


package model;

public class Main {
    public static void main(String[] args) {
        try {
            // Criando um cart√£o v√°lido
            CartaoModel cartao = new CartaoModel(1, "1234567812345678", "Pedro Alves", "12/2026", 123);

            // Exibindo os detalhes do cart√£o (dados mascarados)
            System.out.println(cartao);

            // Tentando criar um cart√£o com n√∫mero inv√°lido
            CartaoModel cartaoInvalido = new CartaoModel(2, "1234", "Erro Exemplo", "12/2026", 123);

        } catch (IllegalArgumentException e) {
            // Exibe a mensagem de erro se houver problemas com os dados do cart√£o
            System.out.println("Erro: " + e.getMessage());
        }

        try {
            // Tentando criar um cart√£o com CVV inv√°lido
            CartaoModel cartaoCvvErrado = new CartaoModel(3, "1234567812345678", "Maria Souza", "12/2026", 99);

        } catch (IllegalArgumentException e) {
            System.out.println("Erro no CVV: " + e.getMessage());
        }

        try {
            // Tentando criar um cart√£o com data de expira√ß√£o inv√°lida (passada)
            CartaoModel cartaoExpirado = new CartaoModel(4, "8765432187654321", "Jo√£o Santos", "01/2020", 456);

        } catch (IllegalArgumentException e) {
            System.out.println("Erro na data de expira√ß√£o: " + e.getMessage());
        }
    }
}  */

package model;

public class Main {
    public static void main(String[] args) {
        try {
            // Criando um cart√£o v√°lido com limite e saldo inicial
            CartaoModel cartao = new CartaoModel(1, "1234567812345678", "Pedro Silva", "12/2026", 123, 5000.00, 1000.00);

            // Exibindo os detalhes do cart√£o
            System.out.println("üü¢ Cart√£o Criado com Sucesso:");
            System.out.println(cartao);
            System.out.println("Saldo Dispon√≠vel: " + cartao.getSaldoDisponivel());

            // Tentando definir um saldo maior que o limite (deve lan√ßar erro)
            System.out.println("\nüî¥ Testando erro: Saldo maior que o limite");
            cartao.setSaldoUtilizado(6000.00); // ERRO esperado
        } catch (IllegalArgumentException e) {
            System.out.println("‚ùå Erro esperado: " + e.getMessage());
        }

        try {
            // Criando um cart√£o com n√∫mero inv√°lido (menos de 16 d√≠gitos)
            System.out.println("\nüî¥ Testando erro: N√∫mero de cart√£o inv√°lido");
            CartaoModel cartaoInvalido = new CartaoModel(2, "1234", "Erro Exemplo", "12/2026", 123, 3000.00, 500.00);
        } catch (IllegalArgumentException e) {
            System.out.println("‚ùå Erro esperado: " + e.getMessage());
        }

        try {
            // Criando um cart√£o com data de expira√ß√£o inv√°lida (passada)
            System.out.println("\nüî¥ Testando erro: Data de expira√ß√£o inv√°lida");
            CartaoModel cartaoExpirado = new CartaoModel(3, "8765432187654321", "Jo√£o Santos", "01/2020", 456, 4000.00, 100.00);
        } catch (IllegalArgumentException e) {
            System.out.println("‚ùå Erro esperado: " + e.getMessage());
        }

        try {
            // Criando um cart√£o com CVV inv√°lido (menos de 3 d√≠gitos)
            System.out.println("\nüî¥ Testando erro: CVV inv√°lido");
            CartaoModel cartaoCvvInvalido = new CartaoModel(4, "1234567812345678", "Maria Souza", "12/2026", 99, 2000.00, 500.00);
        } catch (IllegalArgumentException e) {
            System.out.println("‚ùå Erro esperado: " + e.getMessage());
        }

        try {
            // Criando um cart√£o com limite negativo (deve lan√ßar erro)
            System.out.println("\nüî¥ Testando erro: Limite negativo");
            CartaoModel cartaoLimiteNegativo = new CartaoModel(5, "1234567812345678", "Carlos Mendes", "12/2026", 987, -1000.00, 500.00);
        } catch (IllegalArgumentException e) {
            System.out.println("‚ùå Erro esperado: " + e.getMessage());
        }
    }
}


